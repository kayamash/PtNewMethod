#ifndef PTNEWMETHOD_CHH
#define PTNEWMETHOD_CHH

#include <TROOT.h>
#include <TChain.h>
#include <TFile.h>
#include <TH1.h>
#include <TH2.h>
#include <TCanvas.h>
#include <stdio.h>
#include <math.h>
#include <cmath>
#include <iostream>
#include <fstream>
#include <sys/stat.h>
#include <sys/types.h>
#include <string>
#include <sstream>
#include <TF1.h>
#include <TTree.h>
#include <TStyle.h>
#include <TText.h>
#include <TGraphErrors.h>
#include <TLegend.h>
#include <vector>
#include <TMath.h>
#include <TBranch.h>
#include <TObject.h>
#include <TChain.h>

class PtNewMethod
{
  //variable
private:
  //for tree
  TTree *tChain;
  Float_t m_aipc;
  long int m_eNumber;
  long int m_rNumber;
  Double_t m_toff_pt;
  Double_t m_toff_eta;
  Double_t m_toff_exteta;
  Double_t m_toff_extinneta;
  Double_t m_toff_phi;
  Double_t m_toff_extphi;
  Double_t m_toff_extinnphi;
  Double_t m_tag_charge;
  Double_t m_tag_d0,m_tag_z0;
  Double_t m_probe_segment_etaIndex[10];
  Double_t m_probe_segment_chamberIndex[10];
  Double_t m_probe_segment_x[10];
  Double_t m_probe_segment_y[10];
  Double_t m_probe_segment_z[10];
  Double_t m_probe_segment_px[10];
  Double_t m_probe_segment_py[10];
  Double_t m_probe_segment_pz[10];
  Double_t m_probe_segment_nPrecisionHits[10];
  Double_t m_probe_segment_sector[10];
  Double_t m_poff_pt;
  Double_t m_poff_eta;
  Double_t m_poff_exteta;
  Double_t m_poff_extinneta;
  Double_t m_poff_phi;
  Double_t m_poff_extphi;
  Double_t m_poff_extinnphi;
  Double_t m_poff_charge;
  Double_t m_poff_d0;
  Double_t m_poff_z0;
  Double_t m_tp_extdR;
  Double_t m_tp_dR;
  Double_t m_tL1_pt;
  Double_t m_tL1_eta;
  Double_t m_tL1_phi;
  Double_t m_sumReqdRL1;
  Double_t m_tSA_pt;
  Double_t m_tSA_eta;
  Double_t m_tSA_phi;
  Double_t m_sumReqdREF;

  std::vector<std::string> *m_mes_name;
  Int_t m_tag_proc;
  std::vector<Double_t> *m_pL1_pt;
  std::vector<Double_t> *m_pL1_eta;
  std::vector<Double_t> *m_pL1_phi;
  std::vector<Double_t> *m_pL1_dR;
  std::vector<Int_t> *m_pL1_pass;
  std::vector<Double_t> *m_pSA_pt;
  std::vector<Double_t> *m_pSA_eta;
  std::vector<Double_t> *m_pSA_phi;
  std::vector<Double_t> *m_pSA_dR;
  std::vector<Double_t> *m_pSA_sAddress;
  std::vector<Double_t> *m_pSA_phims;
  std::vector<Double_t> *m_pSA_phibe;
  std::vector<float> *m_pSA_roieta;
  std::vector<float> *m_pSA_roiphi;
  std::vector<Int_t> *m_pSA_pass;
  std::vector<vector<float>> *m_pSA_rpcX;
  std::vector<vector<float>> *m_pSA_rpcY;
  std::vector<vector<float>> *m_pSA_rpcZ;
  std::vector<vector<float>> *m_pSA_rpcR;
  std::vector<vector<float>> *m_pSA_mdtZ;
  std::vector<vector<float>> *m_pSA_mdtR;
  std::vector<vector<float>> *m_pSA_mdtPhi;
  std::vector<vector<Int_t>> *m_pSA_mdthitChamber;
  std::vector<Double_t> *m_pSA_pttgc;
  std::vector<Double_t> *m_pSA_ptalpha;
  std::vector<Double_t> *m_pSA_ptbeta;
  std::vector<Double_t> *m_pSA_superpointZ_BI;
  std::vector<Double_t> *m_pSA_superpointZ_BM;
  std::vector<Double_t> *m_pSA_superpointZ_BO;
  std::vector<Double_t> *m_pSA_superpointZ_BME;
  std::vector<Double_t> *m_pSA_superpointZ_EI;
  std::vector<Double_t> *m_pSA_superpointZ_EM;
  std::vector<Double_t> *m_pSA_superpointZ_EO;
  std::vector<Double_t> *m_pSA_superpointZ_EE;
  std::vector<Double_t> *m_pSA_superpointZ_CSC;
  std::vector<Double_t> *m_pSA_superpointZ_BEE;
  std::vector<Double_t> *m_pSA_superpointR_BI;
  std::vector<Double_t> *m_pSA_superpointR_BM;
  std::vector<Double_t> *m_pSA_superpointR_BO;
  std::vector<Double_t> *m_pSA_superpointR_BME;
  std::vector<Double_t> *m_pSA_superpointR_EI;
  std::vector<Double_t> *m_pSA_superpointR_EM;
  std::vector<Double_t> *m_pSA_superpointR_EO;
  std::vector<Double_t> *m_pSA_superpointR_EE;
  std::vector<Double_t> *m_pSA_superpointR_CSC;
  std::vector<Double_t> *m_pSA_superpointR_BEE;
  std::vector<Double_t> *m_pSA_superpointSlope_BI;
  std::vector<Double_t> *m_pSA_superpointSlope_BM;
  std::vector<Int_t> *m_pEFTAG_pass;

  Double_t m_reqL1dR;
  std::string m_method_name;
  Int_t m_proc;

  //branch
  TBranch *b_eNumber;
  TBranch *b_rNumber;
  TBranch *b_mes_name;
  TBranch *b_aipc;
  TBranch *b_tag_proc;
  TBranch *b_tag_pt;
  TBranch *b_tag_eta;
  TBranch *b_tag_exteta;
  TBranch *b_tag_extinneta;
  TBranch *b_tag_phi;
  TBranch *b_tag_extphi;
  TBranch *b_tag_extinnphi;
  TBranch *b_tag_charge;
  TBranch *b_tag_d0;
  TBranch *b_tag_z0;
  TBranch *b_probe_pt;
  TBranch *b_probe_eta;
  TBranch *b_probe_exteta;
  TBranch *b_probe_extinneta;
  TBranch *b_probe_phi;
  TBranch *b_probe_extphi;
  TBranch *b_probe_extinnphi;
  TBranch *b_probe_charge;
  TBranch *b_probe_d0;
  TBranch *b_probe_z0;
  TBranch *b_probe_segment_etaIndex;
  TBranch *b_probe_segment_chamberIndex;
  TBranch *b_probe_segment_x;
  TBranch *b_probe_segment_y;
  TBranch *b_probe_segment_z;
  TBranch *b_probe_segment_nPrecisionHits;
  TBranch *b_probe_segment_sector;
  TBranch *b_tp_dR;
  TBranch *b_tp_extdR;
  TBranch *b_tL1_pt;
  TBranch *b_tL1_eta;
  TBranch *b_tL1_phi;
  TBranch *b_tSA_pt;
  TBranch *b_tSA_eta;
  TBranch *b_tSA_phi;
  TBranch *b_tCB_pt;
  TBranch *b_tCB_eta;
  TBranch *b_tCB_phi;
  TBranch *b_tEF_pt;
  TBranch *b_tEF_eta;
  TBranch *b_tEF_phi;
  TBranch *b_pL1_pt;
  TBranch *b_pL1_eta;
  TBranch *b_pL1_phi;
  TBranch *b_pL1_dR;;
  TBranch *b_pL1_pass;
  TBranch *b_sumReqdRL1;
  TBranch *b_pSA_pt;
  TBranch *b_pSA_eta;
  TBranch *b_pSA_phi;
  TBranch *b_pSA_dR;
  TBranch *b_pSA_sAddress;
  TBranch *b_pSA_phims;
  TBranch *b_pSA_phibe;
  TBranch *b_pSA_roieta;
  TBranch *b_pSA_roiphi;
  TBranch *b_pSA_pass;
  TBranch *b_pSA_rpcX;
  TBranch *b_pSA_rpcY;
  TBranch *b_pSA_rpcZ;
  TBranch *b_pSA_rpcR;
  TBranch *b_pSA_mdtZ;
  TBranch *b_pSA_mdtR;
  TBranch *b_pSA_mdtPhi;
  TBranch *b_pSA_mdthitChamber;
  TBranch *b_pSA_pttgc;
  TBranch *b_pSA_ptalpha;
  TBranch *b_pSA_ptbeta;
  TBranch *b_pSA_superpointZ_BI;
  TBranch *b_pSA_superpointZ_BM;
  TBranch *b_pSA_superpointZ_BO;
  TBranch *b_pSA_superpointZ_BME;
  TBranch *b_pSA_superpointZ_EI;
  TBranch *b_pSA_superpointZ_EM;
  TBranch *b_pSA_superpointZ_EO;
  TBranch *b_pSA_superpointZ_EE;
  TBranch *b_pSA_superpointZ_CSC;
  TBranch *b_pSA_superpointZ_BEE;
  TBranch *b_pSA_superpointR_BI;
  TBranch *b_pSA_superpointR_BM;
  TBranch *b_pSA_superpointR_BO;
  TBranch *b_pSA_superpointR_BME;
  TBranch *b_pSA_superpointR_EI;
  TBranch *b_pSA_superpointR_EM;
  TBranch *b_pSA_superpointR_EO;
  TBranch *b_pSA_superpointR_EE;
  TBranch *b_pSA_superpointR_CSC;
  TBranch *b_pSA_superpointR_BEE;
  TBranch *b_pSA_superpointSlope_BI;
  TBranch *b_pSA_superpointSlope_BM;

  TBranch *b_sumReqdREF;
  TBranch *b_pEFTAG_pass;

  //Histgram
  TH1D *m_h_BarrelAlpha;
  TH2F *m_h_PtvsBarrelAlpha;
  TH1D *m_h_BarrelBeta;
  TH2F *m_h_PtvsBarrelBeta;
  TH1D *m_h_DeltaThetaBI;
  TH1D *m_h_DeltaThetaBM;

public:
  PtNewMethod(TTree *tree,std::string name,Int_t proc){
    tChain = tree;
    m_eNumber = 0;
    m_rNumber = 0;
    m_tag_proc = 0;
    m_toff_pt = 0;
    m_toff_eta = 0;
    m_toff_exteta = 0;
    m_toff_extinneta = 0;
    m_toff_phi = 0;
    m_toff_extphi = 0;
    m_toff_extinnphi = 0;
    m_tag_charge = 0;
    m_tag_d0 = 0;
    m_tag_z0 = 0;
    m_poff_pt = 0;
    m_poff_eta = 0;
    m_poff_exteta = 0;
    m_poff_extinneta = 0;
    m_poff_phi = 0;
    m_poff_extphi = 0;
    m_poff_extinnphi = 0;
    m_poff_charge = 0;
    m_poff_d0 = 0;
    m_poff_z0 = 0;
    m_tp_dR = 0;
    m_tp_extdR = 0;
    m_tL1_pt = 0;
    m_tL1_eta = 0;
    m_tL1_phi = 0;
    m_tSA_pt = 0;
    m_tSA_eta = 0;
    m_tSA_phi = 0;
    m_tCB_pt = 0;
    m_tCB_eta = 0;
    m_tCB_phi = 0;
    m_tEF_pt = 0;
    m_tEF_eta = 0;
    m_tEF_phi = 0;
    m_mes_name = 0;
    m_pL1_pt = 0;
    m_pL1_eta = 0;
    m_pL1_phi = 0;
    m_pL1_dR = 0;
    m_pL1_pass = 0;
    m_sumReqdRL1 = 0;
    m_pSA_pt = 0;
    m_pSA_eta = 0;
    m_pSA_phi = 0;
    m_pSA_dR = 0;
    m_pSA_pass = 0;
    m_pSA_sAddress = 0;
    m_pSA_rpcX = 0;
    m_pSA_rpcY = 0;
    m_pSA_rpcZ = 0;
    m_pSA_rpcR = 0;
    m_pSA_mdtZ = 0;
    m_pSA_mdtR = 0;
    m_pSA_mdtPhi = 0;
    m_pSA_mdthitChamber = 0;
    m_pSA_phims = 0;
    m_pSA_phibe = 0;
    m_pSA_roieta = 0;
    m_pSA_roiphi = 0;
    m_pSA_ptalpha = 0;
    m_pSA_ptbeta = 0;
    m_pSA_superpointZ_BI = 0;
    m_pSA_superpointZ_BM = 0;
    m_pSA_superpointZ_BO = 0;
    m_pSA_superpointZ_BME = 0;
    m_pSA_superpointZ_EI = 0;
    m_pSA_superpointZ_EM = 0;
    m_pSA_superpointZ_EO = 0;
    m_pSA_superpointZ_EE = 0;
    m_pSA_superpointZ_CSC = 0;
    m_pSA_superpointZ_BEE = 0;
    m_pSA_superpointZ_BME = 0;
    m_pSA_superpointR_BI = 0;
    m_pSA_superpointR_BM = 0;
    m_pSA_superpointR_BO = 0;
    m_pSA_superpointR_EI = 0;
    m_pSA_superpointR_EM = 0;
    m_pSA_superpointR_EO = 0;
    m_pSA_superpointR_EE = 0;
    m_pSA_superpointR_CSC = 0;
    m_pSA_superpointR_BEE = 0;
    m_pSA_superpointSlope_BI = 0;
    m_pSA_superpointSlope_BM = 0;
    m_pEFTAG_pass = 0;
    m_sumReqdREF = 0;
    m_method_name = name;
    m_proc = proc;

      //active only need branch 
    tChain->SetBranchStatus("*",0);
    tChain->SetBranchStatus("EventNumber",1);
    tChain->SetBranchStatus("RunNumber",1);
    tChain->SetBranchStatus("mes_name",1);
    tChain->SetBranchStatus("AverageInteractionsPerCrossing",1);
    tChain->SetBranchStatus("tag_proc",1);
    tChain->SetBranchStatus("tag_pt",1);
    tChain->SetBranchStatus("tag_eta",1);
    tChain->SetBranchStatus("tag_exteta",1);
    tChain->SetBranchStatus("tag_extinneta",1);
    tChain->SetBranchStatus("tag_phi",1);
    tChain->SetBranchStatus("tag_extphi",1);
    tChain->SetBranchStatus("tag_extinnphi",1);
    tChain->SetBranchStatus("tag_charge",1);
    tChain->SetBranchStatus("tag_d0",1);
    tChain->SetBranchStatus("tag_z0",1);
    tChain->SetBranchStatus("probe_pt",1);
    tChain->SetBranchStatus("probe_eta",1);
    tChain->SetBranchStatus("probe_exteta",1);
    tChain->SetBranchStatus("probe_extinneta",1);
    tChain->SetBranchStatus("probe_phi",1);
    tChain->SetBranchStatus("probe_extphi",1);
    tChain->SetBranchStatus("probe_extinnphi",1);
    tChain->SetBranchStatus("probe_charge",1);
    tChain->SetBranchStatus("probe_d0",1);
    tChain->SetBranchStatus("probe_z0",1);
    tChain->SetBranchStatus("probe_segment_etaIndex",1);
    tChain->SetBranchStatus("probe_segment_chamberIndex",1);
    tChain->SetBranchStatus("probe_segment_x",1);
    tChain->SetBranchStatus("probe_segment_y",1);
    tChain->SetBranchStatus("probe_segment_z",1);
    tChain->SetBranchStatus("probe_segment_px",1);
    tChain->SetBranchStatus("probe_segment_py",1);
    tChain->SetBranchStatus("probe_segment_pz",1);
    tChain->SetBranchStatus("probe_segment_nPrecisionHits",1);
    tChain->SetBranchStatus("probe_segment_sector",1);
    tChain->SetBranchStatus("tp_dR",1);
    tChain->SetBranchStatus("tp_extdR",1);
    tChain->SetBranchStatus("tag_L1_pt",1);
    tChain->SetBranchStatus("tag_L1_eta",1);
    tChain->SetBranchStatus("tag_L1_phi",1);
    tChain->SetBranchStatus("tag_SA_pt",1);
    tChain->SetBranchStatus("tag_SA_eta",1);
    tChain->SetBranchStatus("tag_SA_phi",1);
    tChain->SetBranchStatus("tag_CB_pt",1);
    tChain->SetBranchStatus("tag_CB_eta",1);
    tChain->SetBranchStatus("tag_CB_phi",1);
    tChain->SetBranchStatus("tag_EF_pt",1);
    tChain->SetBranchStatus("tag_EF_eta",1);
    tChain->SetBranchStatus("tag_EF_phi",1);
    tChain->SetBranchStatus("probe_mesL1_pt",1);
    tChain->SetBranchStatus("probe_mesL1_eta",1);
    tChain->SetBranchStatus("probe_mesL1_phi",1);
    tChain->SetBranchStatus("probe_mesL1_pass",1);
    tChain->SetBranchStatus("probe_mesL1_dR",1);
    tChain->SetBranchStatus("sumReqdRL1",1);
    tChain->SetBranchStatus("probe_mesSA_pt",1);
    tChain->SetBranchStatus("probe_mesSA_eta",1);
    tChain->SetBranchStatus("probe_mesSA_phi",1);
    tChain->SetBranchStatus("probe_mesSA_pass",1);
    tChain->SetBranchStatus("probe_mesSA_dR",1);
    tChain->SetBranchStatus("probe_mesSA_sAddress",1);
    tChain->SetBranchStatus("probe_mesSA_phims",1);
    tChain->SetBranchStatus("probe_mesSA_phibe",1);
    tChain->SetBranchStatus("probe_mesSA_roiEta",1);
    tChain->SetBranchStatus("probe_mesSA_roiPhi",1);
    tChain->SetBranchStatus("probe_mesSA_rpcHitX",1);
    tChain->SetBranchStatus("probe_mesSA_rpcHitY",1);
    tChain->SetBranchStatus("probe_mesSA_rpcHitZ",1);
    tChain->SetBranchStatus("probe_mesSA_rpcHitR",1);
    tChain->SetBranchStatus("probe_mesSA_mdtHitZ",1);
    tChain->SetBranchStatus("probe_mesSA_mdtHitR",1);
    tChain->SetBranchStatus("probe_mesSA_mdtHitPhi",1);
    tChain->SetBranchStatus("probe_mesSA_mdtHitChamber",1);
    tChain->SetBranchStatus("probe_mesSA_tgcpt",1);
    tChain->SetBranchStatus("probe_mesSA_ptEndcapAlpha",1);
    tChain->SetBranchStatus("probe_mesSA_ptEndcapBeta",1);
    tChain->SetBranchStatus("probe_mesSA_superPointZ_BI",1);
    tChain->SetBranchStatus("probe_mesSA_superPointZ_BM",1);
    tChain->SetBranchStatus("probe_mesSA_superPointZ_BO",1);
    tChain->SetBranchStatus("probe_mesSA_superPointZ_BME",1);
    tChain->SetBranchStatus("probe_mesSA_superPointZ_EI",1);
    tChain->SetBranchStatus("probe_mesSA_superPointZ_EM",1);
    tChain->SetBranchStatus("probe_mesSA_superPointZ_EO",1);
    tChain->SetBranchStatus("probe_mesSA_superPointZ_EE",1);
    tChain->SetBranchStatus("probe_mesSA_superPointZ_CSC",1);
    tChain->SetBranchStatus("probe_mesSA_superPointZ_BEE",1);
    tChain->SetBranchStatus("probe_mesSA_superPointR_BI",1);
    tChain->SetBranchStatus("probe_mesSA_superPointR_BM",1);
    tChain->SetBranchStatus("probe_mesSA_superPointR_BO",1);
    tChain->SetBranchStatus("probe_mesSA_superPointR_BME",1);
    tChain->SetBranchStatus("probe_mesSA_superPointR_EI",1);
    tChain->SetBranchStatus("probe_mesSA_superPointR_EM",1);
    tChain->SetBranchStatus("probe_mesSA_superPointR_EO",1);
    tChain->SetBranchStatus("probe_mesSA_superPointR_EE",1);
    tChain->SetBranchStatus("probe_mesSA_superPointR_CSC",1);
    tChain->SetBranchStatus("probe_mesSA_superPointR_BEE",1);
    tChain->SetBranchStatus("probe_mesSA_superPointSlope_BI",1);
    tChain->SetBranchStatus("probe_mesSA_superPointSlope_BM",1);
    tChain->SetBranchStatus("sumReqdREF",1);
    tChain->SetBranchStatus("probe_mesEFTAG_pass",1);

      //setting each branch address
    tChain->SetBranchAddress("EventNumber",&m_eNumber,&b_eNumber);
    tChain->SetBranchAddress("RunNumber",&m_rNumber,&b_rNumber);
    tChain->SetBranchAddress("mes_name",&m_mes_name,&b_mes_name);
    tChain->SetBranchAddress("AverageInteractionsPerCrossing",&m_aipc,&b_aipc);
    tChain->SetBranchAddress("tag_proc",&m_tag_proc,&b_tag_proc);
    tChain->SetBranchAddress("tag_pt",&m_toff_pt,&b_tag_pt);
    tChain->SetBranchAddress("tag_eta",&m_toff_eta,&b_tag_eta);
    tChain->SetBranchAddress("tag_exteta",&m_toff_exteta,&b_tag_exteta);
    tChain->SetBranchAddress("tag_extinneta",&m_toff_extinneta,&b_tag_extinneta);
    tChain->SetBranchAddress("tag_phi",&m_toff_phi,&b_tag_phi);
    tChain->SetBranchAddress("tag_extphi",&m_toff_extphi,&b_tag_extphi);
    tChain->SetBranchAddress("tag_extinnphi",&m_toff_extinnphi,&b_tag_extinnphi);
    tChain->SetBranchAddress("tag_charge",&m_tag_charge,&b_tag_charge);
    tChain->SetBranchAddress("tag_d0",&m_tag_d0,&b_tag_d0);
    tChain->SetBranchAddress("tag_z0",&m_tag_z0,&b_tag_z0);
    tChain->SetBranchAddress("probe_pt",&m_poff_pt,&b_probe_pt);
    tChain->SetBranchAddress("probe_eta",&m_poff_eta,&b_probe_eta);
    tChain->SetBranchAddress("probe_exteta",&m_poff_exteta,&b_probe_exteta);
    tChain->SetBranchAddress("probe_extinneta",&m_poff_extinneta,&b_probe_extinneta);
    tChain->SetBranchAddress("probe_phi",&m_poff_phi,&b_probe_phi);
    tChain->SetBranchAddress("probe_extphi",&m_poff_extphi,&b_probe_extphi);
    tChain->SetBranchAddress("probe_extinnphi",&m_poff_extinnphi,&b_probe_extinnphi);
    tChain->SetBranchAddress("probe_charge",&m_poff_charge,&b_probe_charge);
    tChain->SetBranchAddress("probe_d0",&m_poff_d0,&b_probe_d0);
    tChain->SetBranchAddress("probe_z0",&m_poff_z0,&b_probe_z0);
    tChain->SetBranchAddress("probe_segment_etaIndex",m_probe_segment_etaIndex,&b_probe_segment_etaIndex);
    tChain->SetBranchAddress("probe_segment_chamberIndex",m_probe_segment_chamberIndex,&b_probe_segment_chamberIndex);
    tChain->SetBranchAddress("probe_segment_x",m_probe_segment_x,&b_probe_segment_x);
    tChain->SetBranchAddress("probe_segment_y",m_probe_segment_y,&b_probe_segment_y);
    tChain->SetBranchAddress("probe_segment_z",m_probe_segment_z,&b_probe_segment_z);
    tChain->SetBranchAddress("probe_segment_px",m_probe_segment_px,&b_probe_segment_px);
    tChain->SetBranchAddress("probe_segment_py",m_probe_segment_py,&b_probe_segment_py);
    tChain->SetBranchAddress("probe_segment_pz",m_probe_segment_pz,&b_probe_segment_pz);
    tChain->SetBranchAddress("probe_segment_nPrecisionHits",m_probe_segment_nPrecisionHits,&b_probe_segment_nPrecisionHits);
    tChain->SetBranchAddress("probe_segment_sector",m_probe_segment_sector,&b_probe_segment_sector);
    tChain->SetBranchAddress("tp_dR",&m_tp_dR,&b_tp_dR);
    tChain->SetBranchAddress("tp_extdR",&m_tp_extdR,&b_tp_extdR);
    tChain->SetBranchAddress("tag_L1_pt",&m_tL1_pt,&b_tL1_pt);
    tChain->SetBranchAddress("tag_L1_eta",&m_tL1_eta,&b_tL1_eta);
    tChain->SetBranchAddress("tag_L1_phi",&m_tL1_phi,&b_tL1_phi);
    tChain->SetBranchAddress("tag_SA_pt",&m_tSA_pt,&b_tSA_pt);
    tChain->SetBranchAddress("tag_SA_eta",&m_tSA_eta,&b_tSA_eta);
    tChain->SetBranchAddress("tag_SA_phi",&m_tSA_phi,&b_tSA_phi);
    tChain->SetBranchAddress("tag_CB_pt",&m_tCB_pt,&b_tCB_pt);
    tChain->SetBranchAddress("tag_CB_eta",&m_tCB_eta,&b_tCB_eta);
    tChain->SetBranchAddress("tag_CB_phi",&m_tCB_phi,&b_tCB_phi);
    tChain->SetBranchAddress("tag_EF_pt",&m_tEF_pt,&b_tEF_pt);
    tChain->SetBranchAddress("tag_EF_eta",&m_tEF_eta,&b_tEF_eta);
    tChain->SetBranchAddress("tag_EF_phi",&m_tEF_phi,&b_tEF_phi);
    tChain->SetBranchAddress("probe_mesL1_pt",&m_pL1_pt,&b_pL1_pt);
    tChain->SetBranchAddress("probe_mesL1_eta",&m_pL1_eta,&b_pL1_eta);
    tChain->SetBranchAddress("probe_mesL1_phi",&m_pL1_phi,&b_pL1_phi);
    tChain->SetBranchAddress("probe_mesL1_pass",&m_pL1_pass,&b_pL1_pass);
    tChain->SetBranchAddress("probe_mesL1_dR",&m_pL1_dR,&b_pL1_dR);
    tChain->SetBranchAddress("sumReqdRL1",&m_sumReqdRL1,&b_sumReqdRL1);
    tChain->SetBranchAddress("probe_mesSA_pt",&m_pSA_pt,&b_pSA_pt);
    tChain->SetBranchAddress("probe_mesSA_eta",&m_pSA_eta,&b_pSA_eta);
    tChain->SetBranchAddress("probe_mesSA_phi",&m_pSA_phi,&b_pSA_phi);
    tChain->SetBranchAddress("probe_mesSA_pass",&m_pSA_pass,&b_pSA_pass);
    tChain->SetBranchAddress("probe_mesSA_dR",&m_pSA_dR,&b_pSA_dR);
    tChain->SetBranchAddress("probe_mesSA_sAddress",&m_pSA_sAddress,&b_pSA_sAddress);
    tChain->SetBranchAddress("probe_mesSA_rpcHitX",&m_pSA_rpcX,&b_pSA_rpcX);
    tChain->SetBranchAddress("probe_mesSA_rpcHitY",&m_pSA_rpcY,&b_pSA_rpcY);
    tChain->SetBranchAddress("probe_mesSA_rpcHitZ",&m_pSA_rpcZ,&b_pSA_rpcZ);
    tChain->SetBranchAddress("probe_mesSA_rpcHitR",&m_pSA_rpcR,&b_pSA_rpcR);
    tChain->SetBranchAddress("probe_mesSA_mdtHitZ",&m_pSA_mdtZ,&b_pSA_mdtZ);
    tChain->SetBranchAddress("probe_mesSA_mdtHitR",&m_pSA_mdtR,&b_pSA_mdtR);
    tChain->SetBranchAddress("probe_mesSA_mdtHitPhi",&m_pSA_mdtPhi,&b_pSA_mdtPhi);
    tChain->SetBranchAddress("probe_mesSA_mdtHitChamber",&m_pSA_mdthitChamber,&b_pSA_mdthitChamber);
    tChain->SetBranchAddress("probe_mesSA_tgcpt",&m_pSA_pttgc,&b_pSA_pttgc);
    tChain->SetBranchAddress("probe_mesSA_ptEndcapAlpha",&m_pSA_ptalpha,&b_pSA_ptalpha);
    tChain->SetBranchAddress("probe_mesSA_ptEndcapBeta",&m_pSA_ptbeta,&b_pSA_ptbeta);
    tChain->SetBranchAddress("probe_mesSA_phims",&m_pSA_phims,&b_pSA_phims);
    tChain->SetBranchAddress("probe_mesSA_phibe",&m_pSA_phibe,&b_pSA_phibe);
    tChain->SetBranchAddress("probe_mesSA_roiEta",&m_pSA_roieta,&b_pSA_roieta);
    tChain->SetBranchAddress("probe_mesSA_roiPhi",&m_pSA_roiphi,&b_pSA_roiphi);
    tChain->SetBranchAddress("probe_mesSA_superPointZ_BI",&m_pSA_superpointZ_BI,&b_pSA_superpointZ_BI);
    tChain->SetBranchAddress("probe_mesSA_superPointZ_BM",&m_pSA_superpointZ_BM,&b_pSA_superpointZ_BM);
    tChain->SetBranchAddress("probe_mesSA_superPointZ_BO",&m_pSA_superpointZ_BO,&b_pSA_superpointZ_BO);
    tChain->SetBranchAddress("probe_mesSA_superPointZ_BME",&m_pSA_superpointZ_BME,&b_pSA_superpointZ_BME);
    tChain->SetBranchAddress("probe_mesSA_superPointZ_EI",&m_pSA_superpointZ_EI,&b_pSA_superpointZ_EI);
    tChain->SetBranchAddress("probe_mesSA_superPointZ_EM",&m_pSA_superpointZ_EM,&b_pSA_superpointZ_EM);
    tChain->SetBranchAddress("probe_mesSA_superPointZ_EO",&m_pSA_superpointZ_EO,&b_pSA_superpointZ_EO);
    tChain->SetBranchAddress("probe_mesSA_superPointZ_EE",&m_pSA_superpointZ_EE,&b_pSA_superpointZ_EE);
    tChain->SetBranchAddress("probe_mesSA_superPointZ_CSC",&m_pSA_superpointZ_CSC,&b_pSA_superpointZ_CSC);
    tChain->SetBranchAddress("probe_mesSA_superPointZ_BEE",&m_pSA_superpointZ_BEE,&b_pSA_superpointZ_BEE);
    tChain->SetBranchAddress("probe_mesSA_superPointR_BI",&m_pSA_superpointR_BI,&b_pSA_superpointR_BI);
    tChain->SetBranchAddress("probe_mesSA_superPointR_BM",&m_pSA_superpointR_BM,&b_pSA_superpointR_BM);
    tChain->SetBranchAddress("probe_mesSA_superPointR_BO",&m_pSA_superpointR_BO,&b_pSA_superpointR_BO);
    tChain->SetBranchAddress("probe_mesSA_superPointR_BME",&m_pSA_superpointR_BME,&b_pSA_superpointR_BME);
    tChain->SetBranchAddress("probe_mesSA_superPointR_EI",&m_pSA_superpointR_EI,&b_pSA_superpointR_EI);
    tChain->SetBranchAddress("probe_mesSA_superPointR_EM",&m_pSA_superpointR_EM,&b_pSA_superpointR_EM);
    tChain->SetBranchAddress("probe_mesSA_superPointR_EO",&m_pSA_superpointR_EO,&b_pSA_superpointR_EO);
    tChain->SetBranchAddress("probe_mesSA_superPointR_EE",&m_pSA_superpointR_EE,&b_pSA_superpointR_EE);
    tChain->SetBranchAddress("probe_mesSA_superPointR_CSC",&m_pSA_superpointR_CSC,&b_pSA_superpointR_CSC);
    tChain->SetBranchAddress("probe_mesSA_superPointR_BEE",&m_pSA_superpointR_BEE,&b_pSA_superpointR_BEE);
    tChain->SetBranchAddress("probe_mesSA_superPointSlope_BI",&m_pSA_superpointSlope_BI,&b_pSA_superpointSlope_BI);
    tChain->SetBranchAddress("probe_mesSA_superPointSlope_BM",&m_pSA_superpointSlope_BM,&b_pSA_superpointSlope_BM);
    tChain->SetBranchAddress("sumReqdREF",&m_sumReqdREF,&b_sumReqdREF);
    tChain->SetBranchAddress("probe_mesEFTAG_pass",&m_pEFTAG_pass,&b_pEFTAG_pass);

    //histgram
    m_h_BarrelAlpha = new TH1D("h_BarrelAlpha",";barrel #alpha;Entries",120,-0.6,0.6);
    m_h_PtvsBarrelAlpha = new TH2F("h_PtvsBarrelAlpha","1/p_{T} vs Barrel #alpha;1/p_{T};barrel #alpha",100,0.,1.0,200,-1.0,1.0);
    m_h_BarrelBeta = new TH1D("h_BarrelBeta",";barrel #beta;Entries",120,-0.6,0.6);
    m_h_PtvsBarrelBeta = new TH2F("h_PtvsBarrelBeta","1/p_{T} vs Barrel #beta;1/p_{T};barrel #beta",100,0.,1.0,200,-1.0,1.0);
    m_h_DeltaThetaBI = new TH1D("h_DeltaThetaBI","Slope #delta #theta BI;offline - SA #delta #theta;Events",2000,-1.,1.);
    m_h_DeltaThetaBM = new TH1D("h_DeltaThetaBM","Slope #delta #theta BM;offline - SA #delta #theta;Events",2000,-1.,1.);
  }

  bool CutAll(Int_t Tagpass,Int_t L1pass);
  bool BarrelDicision(Float_t eta);
  void Loop(Int_t ev);
  void Finalize(TFile *tf1,std::string filename);
  ~PtNewMethod(){
    delete  m_h_BarrelAlpha;
    delete  m_h_PtvsBarrelAlpha;
    delete  m_h_BarrelBeta;
    delete  m_h_PtvsBarrelBeta;
    delete  m_h_DeltaThetaBI;
    delete  m_h_DeltaThetaBM;
  }

};

#endif//PtNewMethod_chh